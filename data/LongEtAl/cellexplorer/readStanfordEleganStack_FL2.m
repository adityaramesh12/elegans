function outimg = readStanfordEleganStack_FL2(dirname, filename, id_dapi, xy_rez, z_rez, zoom_f)% function outimg = readStanfordEleganStack_FL2(dirname, filename, id_dapi, xy_rez, z_rez, zoom_f)% Read the separate TIF images into one single stack %% Copyright Hanchuan Peng and Fuhui Long%------------------------------------% find the first slice%------------------------------------outimg = []; if dirname(end)~='/',  dirname = [dirname '/'];end;N_final_slice_guess=200; img_surfix_guess='tif';N_first_max=100;no_first_slice = -1;for i=0:N_first_max,  if i<10,    if N_final_slice_guess<100,      curstr = ['00' num2str(i)];    else,      curstr = ['00' num2str(i)];    end;  elseif i<100,    if N_final_slice_guess<100,      curstr = ['0' num2str(i)];    else,      curstr = ['0' num2str(i)];    end;  else,    curstr = [num2str(i)];  end;  if exist([dirname filename '_z' curstr '_ch00.' img_surfix_guess], 'file'),      no_first_slice = i;      break;  else,      continue;  end;   end;if no_first_slice==-1,    fprintf('Cannot determine automatically the first slice of image file. Please check your files and programs.\n');    return;else,    fprintf('The first slice detected is no. %d \n', no_first_slice);end;%--------% crop%--------L00 = dir([dirname filename '*ch00.tif*']);if isempty(L00),  L00 = dir([dirname filename '*ch00.TIF*']);  if isempty(L00),    fprintf('There is no TIF file in the specified directory [%s].\n', dirname);    return;  end;end;N_channel = 1;stp = 0;while stp==0    L01 = dir([dirname filename '*ch0' num2str(N_channel) '.tif*']);    if isempty(L01),      L01 = dir([dirname filename '*ch0' num2str(N_channel) '.TIF*']);    end;    if ~isempty(L01),      N_channel = N_channel+1;    else        stp = 1;    end;end;N_slice = length(L00);no_final_slice = no_first_slice+N_slice-1;img_surfix = strtok(L00(round(N_slice/2)).name(end:-1:1), '.');img_surfix = img_surfix(end:-1:1);b_cropset=0;for i=floor((no_first_slice+no_final_slice)/2),  if i<10,    if N_slice<100,      curstr = ['00' num2str(i)];    else,      curstr = ['00' num2str(i)];    end;  elseif i<100,    if N_slice<100,      curstr = ['0' num2str(i)];    else,      curstr = ['0' num2str(i)];    end;  else,    curstr = [num2str(i)];  end;  preread = dip_image(imread([dirname filename '_z' curstr '_ch0' num2str(id_dapi-1) '.' img_surfix])); end;if b_cropset==0,        cropbbox = manual_select_bndbox(uint8(preread));    cropx0 = cropbbox.min_yy;    cropy0 = cropbbox.min_xx;    cropx1 = cropbbox.max_yy;    cropy1 = cropbbox.max_xx;    b_cropset = 1;end;%------------------------------------%read each slice and resize%------------------------------------sz = [cropy1-cropy0+1, cropx1-cropx0+1, N_slice, N_channel];sz = [round(sz(1)*zoom_f), round(sz(2)*zoom_f), round(N_slice*zoom_f), N_channel]; outimg = repmat(uint8(0), sz); for i=no_first_slice:no_final_slice,  if i<10,    if no_final_slice<100,      curstr = ['00' num2str(i)];    else,      curstr = ['00' num2str(i)];    end;  elseif i<100,    if no_final_slice<100,      curstr = ['0' num2str(i)];    else,      curstr = ['0' num2str(i)];    end;  else,    curstr = [num2str(i)];  end;  for j=1:N_channel      tmp0 = dip_image(imread([dirname filename '_z' curstr '_ch0' num2str(j-1) '.' img_surfix]));      tmp0 = tmp0((cropx0:cropx1)-1, (cropy0:cropy1)-1);       if zoom_f==1,        outimg(:,:,i+1,j) = uint8(tmp0);      else,        outimg(:,:,i+1,j) = uint8(imresize(uint8(tmp0), sz(1:2)));      end;  end;    fprintf('Finished loading the %dth(%d) slice.\n', (i-no_first_slice)+1, i);end;outimg2 = uint8([]);% xy_rez = xy_rez;z_rez = z_rez*zoom_f;for j=1:N_channel    outimg2(:,:,:,j) = reslice_Z(outimg(:,:,:,j), xy_rez, z_rez);end;outimg = dip_image(outimg2);return;
