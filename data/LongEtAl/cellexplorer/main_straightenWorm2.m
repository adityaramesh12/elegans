function outimg = main_straightenWorm2(inimg, id_gfp, id_dapi)%function outimg = main_straightenWorm2(inimg, id_gfp, id_dapi)%% The main program to straighten a worm (inimg) in 3D or 4D data.%% Copyright Hanchuan Penginputarg = inimg;if isa(inputarg, 'char'),    inimg = uint8(readim(inputarg));else,     inimg = uint8(inputarg); end;nd = ndims(inimg);if (nd<3 | nd>5),    error('You have to specify a stack with 3 or 4 dimensions.');    return;end;while 1,  c12 = elegan_findWormBoundary2(inimg, id_gfp, id_dapi);       [bpos] = elegantail_backbone_2d(uint8(double(c12)+0));  c = repmat(uint8(0), size(inimg,1), size(inimg,2));  for i=1:length(bpos), c(round(bpos(i).x), round(bpos(i).y))=1; end;  if (nd>=4),    bb = max(squeeze(inimg(:,:,:,id_dapi)),[],3);  else,    bb = max(squeeze(inimg),[],3);  end;  RR = input('Do you want to edit the control points locations? (1: yes; others: no): ');  if RR==1,      bpos = edit_control_pts(bb, bpos);  end;        break;end;%% straighteningKwid = 140;time0 = cputime;if ndims(inimg)==3,    outimg = straighten_worm_0730(inimg, bpos, Kwid);else,    for i=1:size(inimg,4),        outimg(:,:,:,i) = straighten_worm_0730(squeeze(inimg(:,:,:,i)), bpos, Kwid);    end;end;fprintf('Time cost (second) to straighten this stack: %5.2f\n', cputime-time0);return;